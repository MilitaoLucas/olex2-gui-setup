<!-- #ignoreif not(IsFileType('ires'))

$+
run("SetVar(refinement_output, strcat(FileName(),_refinement_output.html))")
$-
<!-- #includeif fs.Exists(GetVar(refinement_output)) refinement_output GetVar(refinement_output);1; -->


<table border="0" width="100%" cellpadding="1" cellspacing="1" bgcolor="$GetVar(HtmlTableFirstcolColour)">

<tr ALIGN='left' NAME='SNUM_REFINEMENT_PROGRAM' width='100%'>
<!-- #include tool-help-first-column gui\blocks\tool-help-first-column.htm;help_ext=Refinement-Program;1; -->
<!-- #include row_table_on gui\blocks\row_table_on.htm;1; -->
  <td width='12%'>
    <b>Program</b>
  </td>

  <td width='45%'>
    <table cellpadding="0" cellspacing="0"><tr>
      <td width='49%'>
<!-- #include program gui\snippets\snippet-program.htm;scope=snum;prg_type=refinement;width='20%';1; -->
      </td>
      <td width='2%'>
      </td>
      <td width='49%'>
<!-- #include method gui\snippets\snippet-method.htm;scope=snum;prg_type=refinement;width='20%';1; --></td>
    </tr></table>
  </td>

  <td align='right' width='11%'>
  <b>Cycles</b>
  </td>

  $+
    html.Snippet("gui/snippets/input-spin-td",
    "value=spy.GetParam('snum.refinement.max_cycles')",
    "name=SET_SNUM_REFINEMENT_MAX_CYCLES",
    "onchange=spy.SetMaxCycles(html.GetValue('~name~'))",
    "min=0",
    "max=200",
    )
  $-

  <td align='right' width='12%'>
  <b>Peaks</b>
  </td>

  $+
    html.Snippet("gui/snippets/input-spin-td",
    "value=math.eval(abs(spy.GetParam(snum.refinement.max_peaks)))",
    "name=SET_SNUM_REFINEMENT_MAX_PEAKS",
    "min=0",
    "max=99",
    "onchange=spy.SetMaxPeaks(html.GetValue('~name~'))",
    )
  $-

<!-- #include row_table_off gui\blocks\row_table_off.htm;1; -->

<tr NAME='SET_REFLECTIONS' width='100%'>
<!-- #include tool-help-first-column gui\blocks\tool-help-first-column.htm;help_ext=Set-Reflection-File;1; -->
<!-- #include row_table_on gui\blocks\row_table_on.htm;1; -->
  <td ALIGN='left' width='12%'>
    <b>hkl file</b>
  </td>

  <td ALIGN='left' width='45%'>
<!-- #include reflection-file gui\snippets\snippet-reflection-file.htm;1; -->
  </td>



  <td ALIGN='center' width='39%'>
<b>hkl</b>:
<!-- #include reflection-date reflection-date.htm;1; -->
  </td>

<!-- #include row_table_off gui\blocks\row_table_off.htm;1; -->



<tr ALIGN='left' NAME='SNUM_WEIGHTING_SCHEME'>
<!-- #include tool-help-first-column gui\blocks\tool-help-first-column.htm;help_ext=Weights,_Extinction_and_ACTA;1; -->
<!-- #include row_table_on gui\blocks\row_table_on.htm;1; -->

  <td width='12%'><b>Weight</b></td>

  <td width='5%'>
   $+
     html.Snippet("gui/snippets/input-checkbox",
     "name=SET_SNUM_REFINEMENT_UPDATE_WEIGHT",
     "checked=spy.GetParam('snum.refinement.update_weight')",
     "onclick=spy.SetParam('snum.refinement.update_weight', html.GetState('~name~'))")
    $-
  </td>

  <td width='31%'>$spy.gui.tools.weightGuiDisplay()</td>

  <td width='6%'><b>EXTI</b></td>

  <td width='5%'>
   $+
     html.Snippet("gui/snippets/input-checkbox",
     "name=SNUM_REFINEMENT_EXTI",
     "checked=not(strcmp(xf.rm.Exti(),'n/a'))",
     "oncheck=spy.SetParam(snum.refinement.refine_extinction,3)>>addins EXTI",
     "onuncheck=spy.SetParam(snum.refinement.refine_extinction,0)>>delins EXTI",
     )
    $-
  </td>

  <td width='17%'>
    $spy.gui.tools.refine_extinction()
  </td>

  <td width='22%'>
    $+
      html.Snippet("gui/snippets/input-combo",
      "name=REFINEMENT_ACTA",
      "items=No ACTA;ACTA NOHKL;ACTA",
      "value=Ins('acta')",
      "onchange=spy.actaGuiDisplay(html.GetValue('~name~'))",
      "readonly=False",
      "onchangealways=True",
      "bgcolor=spy.refinement_acta_bg_colour()",
      )
    $-
  </td>


<!-- #include row_table_off gui\blocks\row_table_off.htm;1; -->

<tr VALIGN="center" ALIGN="left" NAME="USE_SOLVENT_MASK">
<!-- #include tool-help-first-column gui\blocks\tool-help-first-column.htm;help_ext=refinement-masks;1; -->
<!-- #include row_table_on gui\blocks\row_table_on.htm;1; -->


  $+
    html.Snippet("gui/snippets/input-checkbox-td",
    "name=SNUM_REFINEMENT_USE_SOLVENT_MASK",
    "label=Use Solvent Mask",
    "name=SNUM_REFINEMENT_USE_SOLVENT_MASK",
    "checked=spy.GetParam('snum.refinement.use_solvent_mask')",
    "onclick=spy.SetMasking(html.GetState(~name~))"
    )
  $-

<!-- #ignoreif not spy.GetParam('snum.refinement.use_solvent_mask')

  $+
    html.Snippet("gui/snippets/input-checkbox-td",
    "name=SNUM_REFINEMENT_USE_SOLVENT_MASK",
    "label=Update Mask",
    "name=SNUM_REFINEMENT_RECOMPUTE_MASK_BEFORE_REFINEMENT",
    "checked=spy.GetParam('snum.refinement.recompute_mask_before_refinement')",
    "oncheck=spy.SetMasking(html.GetState(~name~))>>
spy.SetParam('snum.refinement.recompute_mask_before_refinement','true')>>
html.SetState('SNUM_REFINEMENT_USE_SOLVENT_MASK', 'true')",
     "onuncheck=spy.SetParam('snum.refinement.recompute_mask_before_refinement','false')"
    )
  $-

  <td width="11%">solvent r</td>
  <td width="10%">
    <font size="$GetVar('HtmlFontSizeControls')">
    <input
      type="text"
      name = "SET_SNUM_MASKS_SOLVENT_RADIUS"
      width="95%"
      height="GetVar('HtmlInputHeight')"
      valign="center"
      bgcolor="GetVar('HtmlTableBgColour')"
      fgcolor="GetVar('HtmlFontColour')"
      value="spy.GetParam('snum.masks.solvent_radius')"
      onchange="spy.SetParam('snum.masks.solvent_radius',html.GetValue('~name~'))"
    >
    </font>
  </td>
  <td width="11%">truncation</td>
  <td width="10%">
    <font size="$GetVar('HtmlFontSizeControls')">
    <input
      type="text"
      name = "SET_SNUM_MASKS_SHRINK_TRUNCATION_RADIUS"
      width="95%"
      height="GetVar('HtmlInputHeight')"
      valign="center"
      bgcolor="GetVar('HtmlTableBgColour')"
      fgcolor="GetVar('HtmlFontColour')"
      value="spy.GetParam('snum.masks.shrink_truncation_radius')"
      onchange="spy.SetParam('snum.masks.shrink_truncation_radius',html.GetValue('~name~'))"
    >
    </font>
  </td>
<!-- #include row_table_off gui\blocks\row_table_off.htm;1; -->


<tr ALIGN='left' NAME='MASK_INFO'>
<!-- #include tool-first-column gui\blocks\tool-first-column.htm;help_ext=Mask_Info;1; -->
<!-- #include row_table_on gui\blocks\row_table_on.htm;1; -->
$spy.gui.tools.get_mask_info()
#ignoreif -->




<!-- #ignoreif spy.GetParam('snum.refinement.use_solvent_mask')
<td>

<!-- #ignoreif fs.Exists(mask_notification.htm)
This is the Olex2 implementation of BYPASS (a.k.a. SQUEEZE)
#ignoreif -->
<!-- #includeif fs.Exists(mask_notification.htm) mask_note mask_notification.htm;1; -->

</td>
#ignoreif -->





<!-- #include row_table_off gui\blocks\row_table_off.htm;1; -->



</table>

<table border="0" style="border-collapse: collapse" width="100%" cellpadding="1" cellspacing="1" bgcolor="$GetVar(HtmlTableFirstcolColour)">
<!-- #includeif fs.Exists('refinement-settings-extra.htm') refinement-settings-extra refinement-settings-extra.htm;gui\blocks\tool-h3-off.htm;image=h3-Refinement-Settings-Extra;colspan=4;onclick=;onclick=;2; -->
<!-- #includeif fs.Exists('refinement_image.htm') refinement_image refinement_image.htm;1; -->
</table>
#ignoreif -->

<!-- #ignoreif IsFileType('ires')
<table border="0" width="100%" cellpadding="1" cellspacing="1" bgcolor="$GetVar(HtmlTableFirstcolColour)">
$spy.gui.cif.check_for_embedded_hkl()
</table>
#ignoreif -->
