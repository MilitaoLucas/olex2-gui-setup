
<xl_macro

<onstartup help="Executes on program start"
  <body
    <args
      <arg1 name="width" def='html.clientwidth(self)'>
    >
    <cmd
      <cmd1 "silent on">
      <cmd1 "htmlpanelvisible True">
      <cmd2 "py.Export(datadir()/olx)">
      <cmd3 "py.run basedir()/util/pyUtil/initpy.py">
      <cmd7 "spy.load_user_gui_phil()">
      <cmd8 "spy.skin.export_parameters()">
      <cmd4 "if isos(linux) then setvar(defeditor,'gedit')">
      <cmd5 "if isos(linux) then setvar(defexplorer,'nautilus')">
      <cmd6 "if isos(linux) then setvar(defbrowser,'xdg-open')">
      <cmd4 "if isos(mac) then setvar(defeditor,'open')">
      <cmd5 "if isos(mac) then setvar(defexplorer,'open')">
      <cmd6 "if isos(mac) then setvar(defbrowser,'open')">
      <cmd6 rem="loglevel(mf)>>py.loglevel(mf)">
      <cmd9 "if not(file.Exists(app.getarg(1))) then
        'if and(IsVar(startup),file.Exists(file.AbsolutePath(GetVar(startup)))) then
              \"reap file.AbsolutePath(GetVar(startup))\"'">
      <cmd10 "bind wheel 'ShowQ -wheel='">
      <cmd11 xxx="spy.GetTip(0)">
      <cmd12 "spy.settings_tree()">
      <cmd13 "deletemenu 'Structure;Export picture (experimental)'">
    >

  <onterminate
    <cmd1 cmd1="clear">
    <cmd2 "echo filepath()">
  >
>
>


<reap help="Load a Crystallographic File"
  <body
    <args
      <arg1 name="file name" def="">
      <arg2 name="options" def="">
      <arg3 name="width" def="html.clientwidth(self)">
      <arg4 name="filename" def="filename()">
      <arg5 name="base" def="basedir()">
      <arg6 name="ext" def="fileext()">
      <arg7 name="filefull" def="filefull()">

      >
    <cmd
      <cmd0  "xgrid.Visible(false)">
      <cmd1  "if strcmp(%4,'none') then none else spy.saveHistory()">
      <cmd2  "spy.SaveStructureParams()">
      <cmd1  "if strcmp(%4,'none') then none else 'spy.SaveCifInfo()'">
      <cmd3  cmd1="silent on">
      <cmd4  "if IsFileLoaded() then clear">
      <cmd5  "spy.fade_out()">
      <cmd9  "@reap %1 %2">
      <cmd5  "spy.fade_in()">
      <cmd10 "if strcmp(filename(),'none') then none else spy.LoadStructureParams()">
      <cmd15 "spy.run_skin sNumTitle">
      <cmd29 "spy.make_HOS(True)">
      <cmd11 "SetVar(SlideQPeaksVal,0)">
      <cmd13 "storeparam startup file.relativePath(filefull()) true">
      <cmd15 "spy.setAllMainToolbarTabButtons()">
      <cmd16 "if File.Exists(strdir()/filename().vvd) then none
       else 'spy.SetParam(snum.refinement.original_formula,xf.GetFormula())'">
      <cmd17 "if strcmp(%7,filefull()) then none else 'spy.loadHistory()'">
      <cmd20 cmd1="if strcmp(%7,filefull()) then none else clear">
      <cmd24 xxx="spy.reset_file_in_OFS(solution_image.htm)">
      <cmd25 xxx="spy.reset_file_in_OFS(refinement_image.htm)">
      <cmd26 "html.Update">
      <cnd27 "if html.IsPopup(history-tree) then spy.popout_history_tree()">
  >
<onabort
  <cmd "ceiling off">
  <cmd "echo lasterror() -m=error">
  <cmd "echo 'There is something wrong with the input file you were trying to load. Please fix this error manually.'">
  <cmd "echo 'Have a look in the lines above - the error and the line number where it occurs are printed there.'">
  <cmd "echo 'You are still in the same structure that you were in before you attempted to load this file.'">
>
>
>

<Close
  <body
    <args>
  <cmd
    <cmd "if IsFileLoaded() then '@close>>html.ItemState index* 0 index-home 
      1 info-title 0 logo 1>>html.Update>>echo File is closed'">
  >
>
>

<GetParam
  <body
    <args
      <arg1 name="variable">
    >

  <cmd
    <cmd1 "echo spy.GetParam(%1)">
  >
>
>

<SetParam
  <body
    <args
      <arg1 name="variable">
      <arg2 name="value">
    >

  <cmd
    <cmd1 "spy.SetParam(%1,%2)">
  >
>
>

<onexit help="Executes on program exit"
  <body
    <args>
  <cmd
    <cmd1 "echo Good Bye">
    <cmd2 "spy.threading.joinAll()">
    <cmd3 "if IsFileLoaded() then 'spy.saveHistory()>>spy.SaveStructureParams()>>
	  spy.SaveCifInfo()>>mode off'">
    <cmd4 "spy.SaveUserParams()">
    <cmd5 "storeparam startup file.relativePath(filefull())">
    <cmd6 "storeparam last_version GetVar(last_version)">
    <cmd7 "stop logging">
  >
 >
>


<xprep help="Starts XPREP if it installed on your machine"
  <body
    <args
      <arg1 name="file" def='filename()'>
    >
    <cmd
      <cmd1 "if File.Exists(%s.p4p) then none else 'file %1.p4p'">
      <cmd2 "exec -o xprep %1">
    >

  <onterminate
  >
>
>

<sgd help="Determine the Space Group"
  <body
    <args
    >

  <cmd
    <cmd1 "cursor(busy,'Determining the Space Group...')">
    <cmd2 "sg">
    <cmd3 "cursor()">
  />
/>
/>


<report help="Creates structure report (macro.xld)"
  <body
    <args
      <arg1 name="show_html" def="True">
    >
    <cmd
      <cmd1 "if not(spy.report.ResolvePrograms()) then abort">
      <cmd2 "spy.report.get_report_title()">
      <cmd4 "cursor(busy, '%Checking for IMAGE file ...%')">
      <cmd2 "spy.dealWithReportImage()">
      <cmd13 "cursor()">
      <cmd7 "cursor(busy, '%Updating% Cif ...')">
      <cmd8 "spy.ExtractCifInfo()">
      <cmd9 "spy.MergeCif()">
      <cmd9a "custom_on_report">
      <cmd13 "cursor()">
      <cmd10 "cursor(busy, 'Creating Report')">
      <cmd10 "echo 'Creating Report...'">
      <cmd11 "cif2tab header acrd anis bnd ang htab tang hcrd footer -n=spy.GetParam(snum.report.title)_tables">
      <cmd12 "if %1 then 'shell spy.GetParam(snum.report.title)_tables.html'">
      <cmd13 "cursor()">
    >
    <onterminate
      <cmd0 "cursor()">
    >
    <onabort
      <cmd "echo lasterror()">
      <cmd0 "cursor()">
    >
  >
>

<ValidateCif help="Validates a CIF file against the given CIF dictionary"
  <body
    <args
      <arg1 name="filepath" def=''>
      <arg2 name="cif_dic" def="cif_core.dic">
      <arg3 name="show_warnings" def="True">
    >
    <cmd
      <cmd1 "if strcmp(%1,'') then spy.ValidateCif
       else 'spy.ValidateCif -filepath=%1 -cif_dic=%2 -show_warnings=%3'">
    >
  >
>

<refine help="Launches refine program. Syntax: refine [l.s.=-1] [plan=-1]"
  <body
    <args
      <arg1 name="l.s." def='-1'>
      <arg2 name="plan" def='-1.1'>
    >
    <cmd
      <cmd0 "xgrid.Visible(false)">
      <cmd1 "spy.gui.maps.MapView(off)">
      <cmd2 "mode off">
      <cmd3 "user filepath()">
      <cmd4 "if not(spy.AnalyseRefinementSource()) then abort">
      <cmd5 "if strcmp(%1,'-1') then None else spy.SetMaxCycles(%1)">
      <cmd6 "if strcmp(%2,'-1.1') then None else spy.SetMaxPeaks(%2)">
      <cmd7 "spy.RunRefinementPrg()">
      <cmd8 "spy.make_HOS()">
      <cmd9 "html.Update">
    >
    <onabort
      <cmd "echo lasterror()">
    >
  >
>


<solve help="Launches solution program XS"
  <body
    <args
      <arg1 name="SOLVE" def='SOLVE'>
    >
    <cmd
      <cmd1 "spy.RunSolutionPrg()">
      <cmd2 cmd="spy.doProgramSettings(spy.GetParam(snum.refinement.program),
        spy.GetParam(snum.refinement.method),true)">
      <cmd3 "spy.make_HOS(True)">
    >
  >
>



<tidy help = "Automatically select things"
  <body
    <args
      <arg1 name="cutoff" def='0.07'>
    />
    <cmd
      <cmd1 "sel atoms where xatom.uiso > %1">
      <cmd2 "sel atoms where xatom.peak<2&&xatom.peak>0">
      <cmd3 "html.Update">
    />
  />
/>

<sadabs help="Run SADABS"
  <body
    <cmd
      <cmd1 "user filepath()">
      <cmd2 "exec -o sadabs">
    >
  >
>

<edit help="Launches notepad for the file with name of current file and extension passed as parameter"
  <body
    <args
      <arg1 name="File extension" def="ins">
      <arg2 name="File path" def="filepath()">
      <arg3 name="File name" def="filename()">
    >
    <cmd
      <cmd1 cmd1="silent on">
      <cmd2 cmd="echo %2%3.%1">
      <cmd3 "if and(IsFileType(ires),or(strcmp(%1,ins),strcmp(%1,res))) then 
       'file>>listen filepath()/filename().%1' else none">
      <cmd4 "if strcmp(%1,hkl) then 
       'exec -o getvar(defeditor) hklsrc()' else 
       'exec -o getvar(defeditor) filepath()/filename().%1 -t=\"stop listen\"'">
      <cmd5 "if strcmp(%1,note) then 
       'exec -o getvar(defeditor) filepath()/filename()-note.txt'">
    >
    <onlisten
      <cmd1 "spy.SetParam(snum.refinement.max_peaks,Ins(QNUM))">
      <cmd2 "spy.SetParam(snum.refinement.max_cycles,Ins(LS))">
      <cmd3 "spy.doProgramSettings(spy.GetParam(snum.refinement.program),spy.GetParam(snum.refinement.method))">
      <cmd4 "html.update">
    >
  >
>



<_anisotropic help="Make atoms anisotropic"
  <body
    <args
      <arg0 name="type" def="-a">
    >
    <cmd
      <cmd1 "sel %1">
      <cmd2 "anis sel">
      <cmd3 "refine">
      <cmd4 "telp">
    >
  >
>

<_isotropic help="Make atoms isotropic"
  <body
    <args
      <arg0 name="type" def="-a">
    >
    <cmd
      <cmd1 "sel %1">
      <cmd2 "isot sel">
      <cmd3 "refine">
      <cmd4 "pers">
      >
    <onterminate
      <cmd0 "sel -u">
    >
  >
>

<telp help="Default telp macro"
  <body
    <args
      <arg0 name="Prob_factor" def="-1">
    >
    <cmd
      <cmd3 "individualise">
      <cmd3 "azoom 100">
      <cmd1 "ads elp">
      <cmd2 "arad isot">
      <cmd3 "mask atoms 5">
      <cmd4 "mask bonds 48">
      <cmd5 "telpv %1">
      <cmd6 "brad 1">
    >
  >
>

<telph help="Default telph macro"
  <body
    <args
      <arg0 name="Prob_factor" def="-1">
    >
    <cmd
      <cmd3 "individualise">
      <cmd3 "azoom 100">
      <cmd1 "ads elp">
      <cmd2 "arad isoth">
      <cmd3 "mask atoms 5">
      <cmd4 "mask bonds 48">
      <cmd5 "telpv %1">
      <cmd6 "brad 1">
    >
  >
>

<pers help="Default pers macro"
  <body
    <args
      <arg0 name="File extension" def="ins">
    >
    <cmd
      <cmd3 "individualise">
      <cmd3 "azoom 100">
      <cmd1 "ads sph">
      <cmd2 "arad pers">
      <cmd3 "mask atoms 1">
      <cmd4 "mask bonds 48">
      <cmd5 "brad 1">
    >
  >
>

<sfil help="Default pers macro"
  <body
    <cmd
      <cmd3 "individualise">
      <cmd3 "azoom 100">
      <cmd1 "ads sph">
      <cmd2 "arad sfil">
      <cmd3 "mask atoms 1">
      <cmd4 "mask bonds 0">
    >
  >
>

<proj help="Default wireframe macro"\
  <body
    <args
      <arg0 name="File extension" def="ins">
    >
    <cmd
      <cmd1 "individualise">
      <cmd2 "mask atoms 16">
      <cmd3 "ads std">
      <cmd4 "arad pers">
      <cmd5 "mask bonds 192">
    >
  >
>

<tubes help="Tubes bonds"
  <body
    <args
      <arg0 name="radius" def="0.1">
    >
    <cmd
      <cmd3 "individualise">
      <cmd1 "ads sph">
      <cmd1 "mask atoms 1">
      <cmd1 "mask bonds 48">
      <cmd2 "brad math.eval(%1*10)">
      <cmd2 "arad %1">

  >
>
>

<_xphadd help="Run XP to do HADD"
  <body
    <args
      <arg0 name="File extension" def="ins">
    >
    <cmd
      <cmd1  "user 'filepath()'">
      <cmd2 "file 'filepath()/filename().ins'">
      <cmd3  "file 'filepath()/filename().res'">
      <cmd4  "listen filepath()/filename().ins">
      <cmd5  "exec -o xp 'filename()'">
      <cmd6  "wait 500">
      <cmd7  "windowcmd XRAYFWClass fmol/n">
      <cmd8  "wait 0">
      <cmd9  "windowcmd XRAYFWClass nl">
      <cmd10 "wait 0">
      <cmd11 "wait 0">
      <cmd12 "windowcmd XRAYFWClass hadd nl">
      <cmd13 "windowcmd XRAYFWClass file filename() nl">
      <cmd14 "windowcmd XRAYFWClass nl">
      <cmd15 "windowcmd XRAYFWClass quit">
      <cmd16 "wait 100">
      <cmd17 "windowcmd XRAYFWClass nl">
    >
    <onlisten
      <cmd0 "grow">
    >
  >
>


<xp help="Run XP"
  <body
    <args
      <arg0 name="File extension" def="ins">
    >
    <cmd
      <cmd1  "user filepath()">
      <cmd2 "file filepath()/filename().ins">
      <cmd3  "file filepath()/filename().res">
      <cmd4  "listen filepath()/filename().ins">
      <cmd6  "exec -o xp filename() -t='stop listen'">
      <cmd7  cmd1="wait 500">
      <cmd8  cmd1="windowcmd XRAYFWClass fmol/n">
      <cmd9  cmd1="wait 0">
      <cmd10 cmd1="windowcmd XRAYFWClass nl">
      <cmd11 cmd1="wait 0">
      <cmd12 cmd1="windowcmd XRAYFWClass proj/n nl">
    >
  >
>

<platon help="Run PLATON"
  <body
    <args
      <arg0 name="command" def="0">
    >
    <cmd
      <cmd1 "spy.olexPlaton(%1)">
    >
  >
>

<saint help="Run BrukerSaint"
  <body
    <args
      <arg0 name="File extension" def="ins">
    >
    <cmd
      <cmd1 "exec saint">
      <cmd2 "wait 1500">
      <cmd5 "windowcmd XRAYFWClass INTEGRATE">
    >
  >
>



<external_edit help="Open file in an external text editor"
  <body
    <args
      <arg1 name="file name" def="">
    >
    <cmd
      <cmd1 "exec -o getvar(defeditor) file.ospath(%1)">
    >
  >
>


<_reap_li help="Load in listening mode"
  <body
    <args
      <arg0 name="file name" def="">
      <arg1 name="options" def="">
    >
    <cmd
      <cmd1 cmd1="silent on">
      <cmd2 cmd1="htmlLoad snippets/work.htm">
      <cmd3 "@reap %1 %2">
      <cmd4 "html.ItemState title 1">
      <cmd5 "html.ItemState tabs-01 1">
      <cmd7 "history">
      <cmd8 cmd1="lines 12">
      <cmd9 "html.update">
    >
  >
>


<htmguifontsize help="Set the default font for the html gui"
  <body
    <args
      <arg0 name="size" def="2">
    >
    <cmd
      <cmd1 "setVar(gui_html_font_size, %1)">
      <cmd2 "html.update">
    >
  >
\ >

<_report help="Creates a Structure Report"
  <body
    <args
      <arg0 name="curr" def="filefull()">
    >
    <cmd
      <cmd1  "spy cif info">
      <cmd2  "cursor(busy, 'Creating Image ...')">
      <cmd3  "ShowWindow info false">
      <cmd4  "pict -pq olex_report_o.png 1">
      <cmd5  "ShowWindow info true">
      <cmd6  "cursor(busy, 'Updating Cif ...')">
      <cmd7  "cifmerge 'filename()_meta.cif'">
      <cmd8  "cursor(busy, 'Creating Report ...')">
      <cmd9  "cif2tab header sym acrd anis bnd ang footer">
      <cmd10 "exec -o getvar(defexplorer) tables.html">
      <cmd11 "cursor()">
    >
  >
>



<_reapa help="Load a Crystallographic File for Autosolve"
  <body
    <args
      <arg0 name="file name" def="">
      <arg1 name="options" def="">
    >
    <cmd
      <cmd1 cmd1="silent on">
      <cmd2 "@reap %1 %2">
      <cmd3 "html.ItemState title 1">
      <cmd4 "html.ItemState tabs-01 1">
      <cmd6 cmd1="lines 12">
    >
  >
>

<reap_fade help="Load a Crystallographic File"
  <body
    <args
      <arg0 name="file name" def="">
      <arg1 name="options" def="">
    >
    <cmd
      <cmd1 "fade 0 1 0.1">
      <cmd2 'waitfor fade'>
      <cmd3 "reap %1">
      <cmd4 "ceiling on">
      <cmd5 "fade 1 0 -0.1">
      <cmd6 'waitfor fade'>
    >
    <onabort
      <cmd1 "ceiling off">
      <cmd "echo lasterror()">
    >
  >
>


<atreap_fader help="Load a Crystallographic File"
  <body
    <args
      <arg0 name="file name" def="">
      <arg1 name="options" def="">
    >
    <cmd
      <cmd1 "fader.initbg(false)">
      <cmd2 "fader.initfg()">
      <cmd3 "fader.position(0)">
      <cmd4 "fader.step(0.05)">
      <cmd5 "fader.visible(true)">
      <cmd6 "@reap %1 %2">
    >
    <onabort
      <cmd "echo lasterror()">
    >
  >
>


<atreap_no_fader help="Load a Crystallographic File"
  <body
    <args
      <arg0 name="file name" def="">
      <arg1 name="options" def="">
    >
    <cmd
      <cmd1 "@reap %1 %2">
      <cmd1 x="@update %1">
    >
    <onabort
      <cmd "echo lasterror()">
    >
  >
>


<bw help="Change the output to Black and White"
  <body
    <cmd
      <cmd1 "load scene bw">
      <cmd2 "load style bw">
    >
  >
>

<calcms help="Calculate Mass Spectrum"
  <body
    <cmd
      <cmd1 "calcMass">
    >
  >
>

<default help="Change the style to default"
  <body
    <cmd
      <cmd1 "load style basedir()/etc/styles/default.glds">
      <cmd2 "load scene basedir()/etc/styles/default.glps">
      <cmd3 "telp 50">
    >
  >
>

<defaultu help="Change current style to default (for some broken graphics drivers on Ubuntu)"
  <body
    <cmd
      <cmd1 "load style basedir()/etc/styles/default.glds">
      <cmd2 "load scene basedir()/etc/styles/defaultu.glps">
      <cmd3 "telp 50">
    >
  >
>

<_defaultw help="Change the output to white default"
  <body
    <cmd
      <cmd1 "load scene white">
      <cmd2 "load style white">
    >
  >
>

<weight help="Use suggested weighting scheme"
  <body
    <args
      <arg1 name="name" def="">
      <arg2 name="type" def="">
    >
    <cmd
      <cmd1 "updatewght ">
      <cmd2 "html.Update">
      <cmd3 "echo DONE">
    >
  >
>

</ help="Add command to the ins file"
  <body
    <args
      <arg1 name="name" def="">
      <arg2 name="name" def="">
      <arg3 name="name" def="">
      <arg4 name="name" def="">
      <arg5 name="name" def="">
        >
    <cmd
      <cmd1 "addins %1 %2 %3 %4 %5">
    >
  >
>

<_report help="Create Reports"
  <body
    <args
      <arg1 name="name" def="thesis">
      <arg2 name="type" def="rtf">
      <arg3 name="ori_file" def="filefull()">
    >
    <cmd
      <cmd1 "reap_li filename().cif">
      <cmd2 "user filepath()">
      <cmd3 "cif2doc %1.%2">
      <cmd4 "exec -o getvar(defexplorer) filename().%2">
      <cmd5 "reap_li %3">
    >
  />
/>

<_table help="Create Tables"
  <body
    <args
      <arg1 name="coordinates" def="">
      <arg2 name="bonds" def="">
      <arg3 name="adps" def="">
      <arg4 name="hcoords" def="">
      <arg5 name="symmetry" def="">
      <arg6 name="torsion" def="">
      <arg7 name="X" def="">
      <arg8 name="Y" def="">
      <arg9 name="Z" def="">
    >
    <cmd
      <cmd1 "cif2tab %1 %2 %3 %4 %5 %6 %7 %8 %9">
      <cmd2 "exec -o getvar(defexplorer) filepath()/tables.html">
    >
  >
>

<skin help="Changes the Olex2 Gui Skin"
  <body
    <args
      <arg1 name="name" def="">
    />
    <cmd
      <cmd1 "cursor(busy,'Please Wait ... for a very long time')">
      <cmd2 "spy.change_skin(%1)">
      <cmd3 "html.load Basedir()/etc/index.htm">
      <cmd4 "cursor()">
    />
  />
/>


<startupPanel help="Set the width of the Control Panel"
  <body
    <args
      <arg1 name="width" def="$spy.GetParam(gui.htmlpanelwidth)">
      <arg2 name="colour" def="$spy.GetParam(gui.timage.base_colour)">
    >
    <cmd
      <cmd1 "spy.SetParam(gui.htmlpanelwidth,'%1')">
      <cmd2 xxx="spy.run_skin timage">
      <cmd5 "htmlpanelwidth %1">
      <cmd4 "spy.resize_skin_logo(%1)">
      <cmd4 "spy.resize_to_panelwidth -i='news/news.png'">
    />
  />
/>

<panel help="Set the width of the Control Panel"
  <body
    <args
      <arg1 name="width" def="spy.GetParam(gui.htmlpanelwidth)">
      <arg2 name="colour" def="spy.GetParam(gui.timage.base_colour)">
    >
    <cmd
      <cmd2 "skin %1">
    />
  />
/>


<edthelp help="Invokes the help editor"
  <body
    <cmd
      <cmd1 "exec basedir()/util/helpedit.exe basedir()/help.xld">
    >
  >
>

<guinames_m
  <body
    <args
      <arg1 name="number" def="html.GetValue(MODE_NAME_NUMBER)">
      <arg2 name="suffix" def="html.GetValue(MODE_NAME_SUFFIX)">
      <arg3 name="type" def="html.GetValue(MODE_NAME_TYPE)">
    >
    <cmd
      <cmd1 "mode name %1 -s=%2 -t=%3">
    >
  >
>


<cifm help="Get customised Data from SMART"
  <body
    <args
      <arg0 cif_info="extra_info" def="">
      <arg1 cif_info_path="extra_info_path" def="basedir()/etc/site/%1.cif">
      <arg2 cif_original="cif_original" def="filename().cif">

  >
  <cmd
    <cmd1 "echo Inserting info from file %2 into %3.">
    <cmd2 "echo cifmerge %3 %2">
    <cmd3 "cifmerge %3 %2">
  >
>
>


<_tutorial help="Starts the Tutorials"
  <body
    <args
    >
    <cmd
      <cmd1 "user basedir()/sample_data">
      <cmd2 "htmlLoad tutorials/tutorials.htm">
    >
    <onterminate
      <cmd1 "clear">
    >
  >
>


<emf help='Edit a custom macro file'
  <body
    <args>
    <cmd
      <cmd "if not(file.Exists(app.ConfigDir()/custom.xld)) then
             \"file.Copy(app.BaseDir()/custom.xld, app.ConfigDir()/custom.xld)>>
               echo 'Create new custom.xld file from a copy'
             \"
      ">
      <cmd1 "exec -o getvar(defeditor) app.ConfigDir()/custom.xld">
    >
  >
>

<options help='Edit Olex2 internal options file'
  <body
    <args>
    <cmd
      <cmd1 "exec -o getvar(defeditor) DataDir()/.options">
    >
  >
>

<log help='Shows the current log file'
  <body
    <args
      <arg1 name="filname" def="custom">
    >
    <cmd
      <cmd1 "flush log">
      <cmd2 "exec -o getvar(defeditor) app.GetLogName()">
    >
  >
>

<html help='Shows the current html'
  <body
    <args
      <arg1 name="popup_name" def="none">
    >
    <cmd
      <cmd1 "if strcmp(%1,'none') then 'html.Dump DataDir()/html.htm'
       else 'html.Dump %1 DataDir()/html.htm'">
      <cmd2 "exec -o getvar(defeditor) DataDir()/html.htm">
    >
  >
>

<profile help='Opens the profiler output'
  <body
    <args
      <arg1 name="filname" def="custom">
    >
    <cmd
      <cmd1 "exec -o getvar(defeditor) DataDir()/profile.txt">
    >
  >
>


<_get help='Get a structure from the dimas database'
  <body
    <args
      <arg1 name="para" def="">
      <arg2 name="para" def="basedir()">
      <arg2 name="para" def="html.clientwidth(self)">
    >
    <cmd
      <cmd1 "spy dimas_load:%1">
    >
    <onterminate
      <cmd1 "cursor()">
    >
  >
>


<tbx help='toolbox'
  <body
    <args
      <arg1 name="name" def="general">
      <arg2 name="width" def="300">
      <arg3 name="height" def="120">
      <arg4 name="x" def="5">
      <arg5 name="y" def="80">
    >
    <cmd
      <cmd0 cmd1="popup %1-box basedir()/etc/gui/%1.htm -b=rtc -t=%1 -w=%2 -h=%3 -x=%4 -y=%5">
      <cmd0 "popup %1-box basedir()/etc/gui/%1.htm -b=tc -t='%1' -w=%2 -h=%3 -x=%4 -y=%5">
    >
  >
>


<tbxs help='toolbox'
  <body
    <args
      <arg1 name="name" def="1">
      <arg2 name="width" def="400">
      <arg3 name="height" def="300">
      <arg4 name="x" def="200">
      <arg5 name="y" def="200">
    >
    <cmd
      <cmd0 "popup %1-box basedir()/etc/gui/customise.htm -b=tc -t='%1' -w=%2 -h=%3 -x=%4 -y=%5">
    >
  >
>


<tbxh help='toolbox help'
  <body
    <args
      <arg1 name="name" def="general">
      <arg2 name="height" def="300">
      <arg3 name="width" def="200">
      <arg4 name="x" def="eval(GetMouseX()-212)">
      <arg5 name="y" def="GetMouseY()">
    >
    <cmd
      <cmd1 "popup %1-tbxh basedir()/etc/gui/help/%1.htm -b=tc -t='%1' -w=%3 -h=%2 -x=%4 -y=%5">
    >
    <onterminate
      <cmd0 "cursor()">
    >
  >
>


<oda help="Launches ac_run"
  <body
    <args
      <arg1 name="single" def="">
    >
    <cmd
      <cmd6 "spy.runODAC(spy.ac_run solveit -%1)">
    >
  >
>




<odemo help="Launches OD Demo"
  <body
    <args
      <arg1 name="single" def="DataDir()/ODemo.zip">
    >
    <cmd
      <cmd1 "user BaseDir()">
      <cmd2 "html.ItemState * 0 tab* 0 logo1 1 index-info* 1 info-title 1">
      <cmd3 "html.ItemState info-history 0">
      <cmd4 "html.ItemState info-reflection-statistics 0">
      <cmd5 "html.ItemState info-bad-reflections 0">
      <cmd6 "html.ItemState info-electron-density-peaks 0">
      <cmd7 "html.ItemState info-autochem 0">
      <cmd8 "html.ItemState info-refinement-indicators 0">
      <cmd9 "html.ItemState info-recent-files 0">
      <cmd10 "spy.SetParam(autochem.batch.directory,'%1')">
      <cmd11 "spy.SetParam(autochem.solution_program,Auto)">
      <cmd12 XXX="spy.SetParam(autochem.solution_method,Auto)">
      <cmd13 XXX="spy.SetParam(autochem.refinement_program,Auto)">
      <cmd14 XXX="spy.SetParam(autochem.refinement_method,Auto)">
      <cmd15 XXX="spy.SetParam(autochem.durham_structures,False)">
      <cmd16 "spy.SetParam(autochem.demo_mode,True)">
      <cmd17 XXX="spy.SetParam(autochem.cutoff1_type,--)">
      <cmd17 XXX="spy.SetParam(autochem.cutoff2_type,--)">
      <cmd18 "spy.ac_run solveit">
    >
  >
>


<dire help="Opens the current directory in Explorer"
  <body
    <cmd
      <cmd0 "shell filepath()">
    >
  >
>

<autorefine help="Refines only if the user.auto_refine_after_anis parameter is set to True"
  <body
    <cmd
      <cmd1 "if spy.GetParam(user.auto_refine_after_anis) then refine">
    >
  >
>


<setup help="Setup Wizard for Olex2"
  <body
    <args
      <arg1 name="setup_page" def="0">
    >

  <cmd
    <cmd0 cmd="spy.tbxs -n=%1">
  />
/>
/>


<wilson_plot help="Creates and displays a Wilson Plot"
  <body
    <args
      <arg1 name="method">
      <arg2 name="n_bins">
      <arg3 name="output_csv_file">
    >
    <cmd
      <cmd1 "if strcmp(%1,'') then none else spy.SetParam(graphs.reflections.wilson_plot.method,%1)">
      <cmd2 "if strcmp(%2,'') then none else spy.SetParam(graphs.reflections.wilson_plot.n_bins,%2)">
      <cmd3 "if strcmp(%3,'') then none else spy.SetParam(graphs.reflections.wilson_plot.output_csv_file,%3)">
      <cmd5 "spy.WilsonPlot()">
    >
  >
>

<completeness help="Calculates and displays a completeness plot"
  <body
    <args
      <arg1 name="reflections_per_bin">
      <arg2 name="bin_range_as">
      <arg3 name="output_csv_file">
    >
    <cmd
      <cmd1 "if strcmp(%1,'') then none else spy.SetParam(graphs.reflections.completeness.reflections_per_bin,%1)">
      <cmd2 "if strcmp(%2,'') then none else spy.SetParam(graphs.reflections.completeness.resolution_as,%2)">
      <cmd1 "if strcmp(%3,'') then none else spy.SetParam(graphs.reflections.completeness.output_csv_file,%3)">
      <cmd4 "spy.CompletenessPlot()">
    >
  >
>

<cumulative_intensity help="Calculates and displays the cumulative intensity distribution"
  <body
    <args
      <arg1 name="n_bins">
      <arg2 name="output_csv_file">
    >
    <cmd
      <cmd1 "if strcmp(%1,'') then none else spy.SetParam(graphs.reflections.cumulative_intensity.n_bins,%1)">
      <cmd1 "if strcmp(%2,'') then none else spy.SetParam(graphs.reflections.cumulative_intensity.output_csv_file,%2)">
      <cmd3 "spy.CumulativeIntensityDistribution()">
    >
  >
>

<systematic_absences help="Calculates and displays the systematic absences intensity distribution"
  <body
    <args
      <arg1 name="output_csv_file">
    >
    <cmd
      <cmd1 "if strcmp(%1,'') then none else spy.SetParam(graphs.reflections.systematic_absences.output_csv_file,%1)">
      <cmd1 "spy.SystematicAbsencesPlot()">
    >
  >
>

<fobs_fcalc help="Calculates and displays an Fobs vs Fcalc plot"
  <body
    <args
      <arg1 name="batch_number" def="None">
      <arg2 name="output_csv_file">
    >
    <cmd
      <cmd1 "if strcmp(%2,'') then none else spy.SetParam(graphs.reflections.fobs_fcalc.output_csv_file,%2)">
      <cmd2 "spy.Fobs_Fcalc_plot(%1)">
    >
  >
>

<fobs_over_fcalc help="Calculates and displays a plot of Fobs/Fcalc vs resolution"
  <body
    <args
      <arg1 name="resolution_as">
      <arg2 name="binning">
      <arg3 name="n_bins">
      <arg4 name="output_csv_file">
    >
    <cmd
      <cmd1 "if strcmp(%1,'') then none else spy.SetParam(graphs.reflections.fobs_over_fcalc.resolution_as,%1)">
      <cmd2 "if strcmp(%2,'') then none else spy.SetParam(graphs.reflections.fobs_over_fcalc.binning,%2)">
      <cmd3 "if strcmp(%3,'') then none else spy.SetParam(graphs.reflections.fobs_over_fcalc.n_bins,%3)">
      <cmd4 "if strcmp(%4,'') then none else spy.SetParam(graphs.reflections.fobs_over_fcalc.output_csv_file,%4)">
      <cmd5 "spy.Fobs_over_Fcalc_plot()">
    >
  >
>

<normal_probability help="Calculates and displays a Normal Probability plot"
  <body
    <args
      <arg1 name="output_csv_file">
    >
    <cmd
      <cmd1 "if strcmp(%1,'') then none else spy.SetParam(graphs.reflections.normal_probability.output_csv_file,%1)">
      <cmd2 "spy.Normal_probability_plot()">
    >
  >
>

<starter help="Swap between start panels"
  <body
    <cmd
      <cmd1 "html.ItemState home-start 0 1">
      <cmd2 "html.ItemState home-starter 0 1">
      <cmd2 "html.ItemState work-itneractive 1">
    >
  >
>

<gui2 help="Switch to Gui2"
  <body
    <cmd
      <cmd2 "SetVar('user_refinement_gui2',True)">
      <cmd2 "spy.makeTestbanner()">
      <cmd2 "html.ItemState * 0">
      <cmd2 "html.ItemState logo1 1">
      <cmd2 "html.ItemState info-title 1">
      <cmd2 "html.ItemState index-all-in-one 1">
      <cmd2 "html.ItemState aio-* 0">
      <cmd2 "spy.doBanner(spy.GetParam(snum.refinement.banner_slide))">
      <cmd2 "SetImage(BANNER_IMAGE,strcat(banner_,spy.GetParam(snum.refinement.banner_slide).png))">
    >
  >
>

<g3 help="Switch to Gui3"
  <body
    <cmd
      <cmd2 "clear">
      <cmd2 "html.ItemState * 0">
      <cmd2 "html.ItemState logo1 1">
      <cmd2 "html.ItemState info-title 1">
      <cmd2 "html.ItemState index-g3 1">
      <cmd2 "html.ItemState g3-* 0">
      <cmd2 "html.ItemState tasks 1">
      <cmd2 "html.ItemState *tab-g3 2">
    >
  >
>

<g4 help="Switch to Gui4"
  <body
    <cmd
      <cmd2 "clear">
      <cmd2 "html.ItemState * 0">
      <cmd2 "html.ItemState logo1 1">
      <cmd2 "html.ItemState info-title 1">
      <cmd2 "html.ItemState index-g4 1">
      <cmd2 "html.ItemState g4-* 1">
      <cmd2 "spy.g4.sel_evaluate_selection()">
      <cmd2 "html.ItemState g4-tasks 1">
      <cmd2 "html.ItemState g4-status 1">
      <cmd2 "html.ItemState *tab-g4 1">
    >
  >
>


<tool help="Show grouped gui tools"
  <body
    <args
      <arg1 name="tools" def="">
    >
    <cmd
      <cmd1 "gui2">
      <cmd1 "html.ItemState aio* 0">
      <cmd2 "html.ItemState aio-%1* 1">
    >
  >
>



<edt help="Edits a particular atom"
  <body
    <args
      <arg1 name="atom" def="">
    >
    <cmd
      <cmd1 "editatom %1">
    >
  >
>


<hho help="empty htmlpanel except for header"
  <body
    <args
      <arg1 name="tab" def="work">
    >
    <cmd
      <cmd1 "html.ItemState * 0">
      <cmd1 "html.ItemState tab* 2">
      <cmd2 "html.ItemState logo1 1">
      <cmd2 "html.ItemState index-%1* 1">
      <cmd2 "html.ItemState %1* 2">
      <cmd2 "html.ItemState tab-%1 1">
      <cmd2 "html.ItemState info-title 1">
    >
  >
>


<mspy help="run a spy from the macro"
  <body
    <args
      <arg1 name="command" def="">
    >
    <cmd
      <cmd1 "spy.%1()">
    >
  >
>

<mode_grow help="setting mode grow with parameters"
  <body
    <args
      <arg1 name="command" def=spy.GetParam(snum.grow.short)>
      <arg1 name="command" def=spy.GetParam(snum.grow.selection)>
      <arg1 name="command" def=spy.GetParam(snum.grow.vdw)>
    >
    <cmd
      <cmd1 'mode grow -%1 -%2 -%3'>
    >
  >
>

<getAutoChem help="Get AutoChem"
  <body
    <args
      <arg1 name="username" def="">
      <arg1 name="password" def="">
    >
    <cmd
      <cmd1 'spy.register_new_odac(%1,%2)'>
    >
  >
>


<dires help="open the directory using explorer"
  <body
    <args
      <arg1 name="datadir" def="DataDir()">
    >
    <cmd
      <cmd0 "shell %1">
    >
  >
>



<link_parts_occupancies_with help="link parts and occupancies with chosen restraint"
  <body
    <args
      <arg1 name="command" def="">
    >
    <cmd
      <cmd1 "SetVar(last_disorder_sel,sel())">
      <cmd2 "isot">
      <cmd3 "sel GetVar(last_disorder_sel)">
      <cmd4 "%1">
      <cmd5 "selback">
      <cmd6 "part -p=2 -lo sel">
      <cmd7 "fuse">
      <cmd8 "labels -p -v -o">
    >
  >
>

<txt help="Open log file in an external text editor but with unique identifier"
  <body
    <args
      <arg1 name="command" def="">
    >
    <cmd
      <cmd1 "spy.txt()">
    >
  >
>

<expand help="Expands sequence from given start, end labels and optional increment"
  <body
    <args
      <arg1 name="start" def="">
      <arg2 name="finish" def="">
      <arg3 name="increment" def="1">
    >
    <cmd
      <cmd1 "spy.expand('%1', '%2', '%3')">
    >
  >
>

<changesgs help="Changes the space group settings"
  <body
    <args
      <arg1 name="cell_choice" def="">
      <arg2 name="axis" def="">
    >
    <cmd
      <cmd1 "sgs %1 %2">
      <cmd2 "spy.run_skin sNumTitle">
      <cmd3 "html.Update">
    >
  >
>

<user_onstartup help="dummy definition" <body > >
<custom_on_report help="dummy definition" <body > >



<#include "custom.xld">
<#include "app.ConfigDir()/custom.xld">
